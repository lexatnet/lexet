app: lexet
blacklisted:
  skip:
    - libgcc_s.so.1
    - libexpat.so.1
    - libgtk-3.so.0
    - libSM.so.6
    - libasound.so.2
    - libGL.so.1
    - libEGL.so.1
ingredients:
  dist: bionic
  sources:
    - deb http://archive.ubuntu.com/ubuntu/ bionic main universe
    - deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe
    - deb http://archive.ubuntu.com/ubuntu bionic main
    - deb http://archive.ubuntu.com/ubuntu bionic-updates main amd64
    - deb http://archive.ubuntu.com/ubuntu bionic-updates main
    - deb http://archive.ubuntu.com/ubuntu bionic-security main
    - deb http://archive.ubuntu.com/ubuntu/ bionic main restricted
    - deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted
    - deb http://archive.ubuntu.com/ubuntu/ bionic multiverse
    - deb http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse
    - deb http://security.ubuntu.com/ubuntu bionic-security main
    - deb http://security.ubuntu.com/ubuntu bionic-security main restricted
    - deb http://security.ubuntu.com/ubuntu bionic-security universe
    - deb http://security.ubuntu.com/ubuntu bionic-security multiverse
    - deb http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
    - deb https://packagecloud.io/AtomEditor/atom/any/ any main
  ppas:
    - ubuntu-elisp/ppa
  packages:
    # libs
    # ---------------
    # - libgbm1
    - libxcb-dri2-0
    - libxcb-dri3-0
    - libglapi-mesa
    - libxcb-present0
    - libxcb-sync1
    - libxcb-xfixes0
    - libxshmfence1
    - libegl-mesa0
    - libexpat1
    - libegl1
    - libgtk-3-0
    - build-essential
    - libsm6
    - libasound2
    - libgl1
    - libgnutls30
    - libsqlite3-dev
    - libbz2-dev
    - libssl-dev
    - zlib1g-dev
    - uuid-dev
    - libgdbm-dev
    - libncurses5-dev
    # tools
    - php-cli
    - php-dev
    - php-zip
    - php-phar
    - php-xml
    - php-mbstring
    - shellcheck
    - hunspell
    - hunspell-en-us
    - hunspell-ru
    # - sbcl
    - texi2html
    - texinfo

  pretend:
    - libgbm1 19.0.8-0ubuntu0~18.04.2
  script:
    - cwd=$(pwd)
    - [ -d ${cwd}/.home ] || mkdir --verbose ${cwd}/.home
    - [ -f ./mu.codewith.editor.png ] || wget --continue https://raw.githubusercontent.com/mu-editor/mu/master/conf/mu.codewith.editor.png
    - [ -f ./lexet.png ] || cp ./mu.codewith.editor.png ./lexet.png
    - [ -f ./composer.phar ] || wget --continue --output-document=composer.phar https://getcomposer.org/composer.phar && chmod a+x ./composer.phar
    - [ -f ./phpcs.phar ] || wget --continue --output-document=phpcs.phar https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar && chmod a+x ./phpcs.phar
    - [ -f ./phpcbf.phar ] || wget --continue --output-document=phpcbf.phar https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar && chmod a+x ./phpcbf.phar


script:
  - cwd=$(pwd)
  - echo "current directory = '${cwd}'"

  # import sripts lib
  - source $through_point/scripts/index.sh

  # build libs from sources
  - install_libffi --prefix "${cwd}/usr/libffi" --local-repo-cache ../libffi --local-repo ./libffi

  # install python3 from sources
  - export LD_LIBRARY_PATH=${cwd}/usr/lib/x86_64-linux-gnu/:$cwd/lib/x86_64-linux-gnu/:$cwd/usr/lib/:${cwd}/lib/:$LD_LIBRARY_PATH
  - echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH


  - cp ../composer.phar ${cwd}/usr/bin/composer
  - cp ../phpcs.phar ${cwd}/usr/bin/phpcs
  - cp ../phpcbf.phar ${cwd}/usr/bin/phpcbf

  - ln -s ./php7.2 ${cwd}/usr/bin/php

  # - extensions_dir=$(${cwd}/usr/bin/php -i | grep extension_dir | sed 's/extension_dir//' | sed 's/=>//' | awk '{print $1}')
  - extensions_dir=/usr/lib/php/20170718
  - cat > ${cwd}/etc/php/7.2/cli/conf.d/php.ini <<EOF
  - extension_dir=\${LEXET_MOUNT_POINT}${extensions_dir}
  - extension = phar.so
  - extension = xmlwriter.so
  - extension = json.so
  - extension = tokenizer.so
  - extension = simplexml.so
  - extension = iconv.so
  - extension = mbstring.so
  - EOF

  # install sbcl from sources
  - install_sbcl --prefix "${cwd}/usr" --local-repo ./sbcl

  # patch hardcoded bin paths
  - patch_usr --search "#!${cwd}/usr/bin/"

  # copy appimage entrypoint script
  - cp ../../AppRun ./AppRun
  - chmod a+x ./AppRun

  - [ -d ${cwd}/env ] || mkdir --verbose ${cwd}/env
  - [ -d ${cwd}/init ] || mkdir --verbose ${cwd}/init

  # create scripts
  - [ -d ${cwd}/scripts ] || mkdir --verbose ${cwd}/scripts
  - cp ${cwd}/../../incremental_tags_generation.sh ${cwd}/scripts/incremental_tags_generation.sh
  - chmod a+x ${cwd}/scripts/incremental_tags_generation.sh

  # install utils
  - install_utils --root ${cwd} --home ${cwd}/../.home

  # copy libs
  - copy_libs --src /usr/lib/x86_64-linux-gnu --destination ${cwd}/usr/lib/x86_64-linux-gnu --lib libgtk-3.so.0 --lib libasound.so.2 --lib mesa/libGL.so.1
  - copy_libs --src /lib/x86_64-linux-gnu --destination ${cwd}/lib/x86_64-linux-gnu --lib libgcc_s.so.1 --lib libexpat.so.1

  # build desktop file
  - create_lexet_desktop_file --name ./lexet.desktop
